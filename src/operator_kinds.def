/*
 * Binary operators:
 */

#ifndef BINOP
#define BINOP(p_kind, p_tok, p_precedence)
#endif

BINOP(P_BINARY_MUL, P_TOK_STAR, 12)
BINOP(P_BINARY_DIV, P_TOK_SLASH, 12)
BINOP(P_BINARY_MOD, P_TOK_PERCENT, 12)
BINOP(P_BINARY_ADD, P_TOK_PLUS, 11)
BINOP(P_BINARY_SUB, P_TOK_MINUS, 11)
BINOP(P_BINARY_SHL, P_TOK_LESS_LESS, 10)
BINOP(P_BINARY_SHR, P_TOK_GREATER_GREATER, 10)
BINOP(P_BINARY_LT, P_TOK_LESS, 9)
BINOP(P_BINARY_LE, P_TOK_LESS_EQUAL, 9)
BINOP(P_BINARY_GT, P_TOK_GREATER, 9)
BINOP(P_BINARY_GE, P_TOK_GREATER_EQUAL, 9)
BINOP(P_BINARY_EQ, P_TOK_EQUAL_EQUAL, 8)
BINOP(P_BINARY_NE, P_TOK_EXCLAIM_EQUAL, 8)
BINOP(P_BINARY_BIT_AND, P_TOK_AMP, 7)
BINOP(P_BINARY_BIT_XOR, P_TOK_CARET, 6)
BINOP(P_BINARY_BIT_OR, P_TOK_PIPE, 5)
BINOP(P_BINARY_LOG_AND, P_TOK_AMP_AMP, 4)
BINOP(P_BINARY_LOG_OR, P_TOK_PIPE_PIPE, 2)
BINOP(P_BINARY_ASSIGN, P_TOK_EQUAL, 1)
BINOP(P_BINARY_ASSIGN_MUL, P_TOK_STAR_EQUAL, 1)
BINOP(P_BINARY_ASSIGN_DIV, P_TOK_SLASH_EQUAL, 1)
BINOP(P_BINARY_ASSIGN_MOD, P_TOK_PERCENT_EQUAL, 1)
BINOP(P_BINARY_ASSIGN_ADD, P_TOK_PLUS_EQUAL, 1)
BINOP(P_BINARY_ASSIGN_SUB, P_TOK_MINUS_EQUAL, 1)
BINOP(P_BINARY_ASSIGN_SHL, P_TOK_LESS_LESS_EQUAL, 1)
BINOP(P_BINARY_ASSIGN_SHR, P_TOK_GREATER_GREATER_EQUAL, 1)
BINOP(P_BINARY_ASSIGN_BIT_AND, P_TOK_AMP_EQUAL, 1)
BINOP(P_BINARY_ASSIGN_BIT_XOR, P_TOK_CARET_EQUAL, 1)
BINOP(P_BINARY_ASSIGN_BIT_OR, P_TOK_PIPE_EQUAL, 1)

#undef BINOP
