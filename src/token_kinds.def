#ifndef TOKEN
#error macro TOKEN(kind) must be defined before including this file
#endif

#ifndef PUNCTUACTOR
#define PUNCTUACTOR(kind, spelling) TOKEN(kind)
#endif

#ifndef KEYWORD
#define KEYWORD(spelling) TOKEN(KEY_##spelling)
#endif

/* Special tokens: */
TOKEN(EOF) /* End-Of-File */
TOKEN(EOL) /* End-Of-Line */
TOKEN(COMMENT) /* Not generated unless if requested */
TOKEN(IDENTIFIER)

/* Literals: */
TOKEN(INT_LITERAL)
TOKEN(FLOAT_LITERAL)

/* Punctuactors: */
PUNCTUACTOR(LBRACE, "{")
PUNCTUACTOR(RBRACE, "}")
PUNCTUACTOR(LPAREN, "(")
PUNCTUACTOR(RPAREN, ")")
PUNCTUACTOR(COMMA, ",")
PUNCTUACTOR(COLON, ":")
PUNCTUACTOR(SEMI, ";")
PUNCTUACTOR(ARROW, "->")
PUNCTUACTOR(EQUAL, "=")
PUNCTUACTOR(EQUAL_EQUAL, "==")
PUNCTUACTOR(LESS, "<")
PUNCTUACTOR(LESS_LESS, "<<")
PUNCTUACTOR(LESS_EQUAL, "<=")
PUNCTUACTOR(LESS_LESS_EQUAL, "<<=")
PUNCTUACTOR(GREATER, ">")
PUNCTUACTOR(GREATER_GREATER, ">>")
PUNCTUACTOR(GREATER_EQUAL, ">=")
PUNCTUACTOR(GREATER_GREATER_EQUAL, ">>=")
PUNCTUACTOR(EXCLAIM, "!")
PUNCTUACTOR(EXCLAIM_EQUAL, "!=")
PUNCTUACTOR(PLUS, "+")
PUNCTUACTOR(PLUS_EQUAL, "+=")
PUNCTUACTOR(MINUS, "-")
PUNCTUACTOR(MINUS_EQUAL, "-=")
PUNCTUACTOR(STAR, "*")
PUNCTUACTOR(STAR_EQUAL, "*=")
PUNCTUACTOR(SLASH, "/")
PUNCTUACTOR(SLASH_EQUAL, "/=")
PUNCTUACTOR(PERCENT, "%")
PUNCTUACTOR(PERCENT_EQUAL, "%=")
PUNCTUACTOR(CARET, "^")
PUNCTUACTOR(CARET_EQUAL, "^=")
PUNCTUACTOR(PIPE, "|")
PUNCTUACTOR(PIPE_PIPE, "||")
PUNCTUACTOR(PIPE_EQUAL, "|=")
PUNCTUACTOR(AMP, "|")
PUNCTUACTOR(AMP_AMP, "||")
PUNCTUACTOR(AMP_EQUAL, "|=")

/* Keywords: */
KEYWORD(void)
KEYWORD(bool)
KEYWORD(char)
KEYWORD(i8)
KEYWORD(i16)
KEYWORD(i32)
KEYWORD(i64)
KEYWORD(u8)
KEYWORD(u16)
KEYWORD(u32)
KEYWORD(u64)
KEYWORD(f32)
KEYWORD(f64)
KEYWORD(true)
KEYWORD(false)
KEYWORD(as)
KEYWORD(fn)
KEYWORD(let)
KEYWORD(if)
KEYWORD(else)
KEYWORD(then)
KEYWORD(for)
KEYWORD(while)
KEYWORD(loop)
KEYWORD(return)
KEYWORD(break)
KEYWORD(continue)

#undef TOKEN
#undef PUNCTUACTOR
#undef KEYWORD
